{"version":3,"sources":["constants/ConstActionTypes.js","reducers/database.js","constants/ConstParameters.js","constants/ConstList.js","reducers/calcOutput.js","reducers/dbQuery.js","reducers/reducerCalc.js","reducers/reducerLayout.js","reducers/index.js","constants/ConstLink.js","actions/index.js","components/ToggleButton.jsx","containers/MenuType.jsx","components/MdlTableClass.jsx","containers/IndexTable.jsx","containers/Header.jsx","containers/Drawer.jsx","containers/MenuToggle.jsx","components/InputBoxValue.jsx","containers/MenuChar.jsx","containers/MenuMax.jsx","containers/MenuOptionsA.jsx","containers/MenuOptionsB.jsx","containers/MenuOptionsC.jsx","containers/OutputTable.jsx","containers/Content.jsx","containers/Footer.jsx","containers/App.jsx","registerServiceWorker.js","index.js"],"names":["TYPE_CHANGE","PLAIN_CHANGE","FLY_CHANGE","MONS_CHANGE","MAX_CHANGE","INPUT_CHANGE","REF_CHANGE","REF_SIN_CHANGE","CANNON_CHANGE","MODEL_OPEN","MODEL_CLOSE","CHAR_SELECT","PLAIN_SELECT","RARITY_SELECT","db","Lokijs","dbWeapon","addCollection","dbType","dbChar","weaponData","forEach","element","insert","typeData","charData","muxMax","max0","max1","max2","max3","max4","max5","maxskillSpdUpF","maxskillSpdUpB","weaponAntiFly","weaponIgnoreDef","weaponIgnoreDef2","weaponIgnoreDef3","weaponAtkUp","listType","listTypeS","listBut","listButS","listRef","listRefS","tableHead","tableInd","tableCharHead","tableCharInd","listMelee","listMagic","listPhys","listPlain","listPlainS","listPlainQ","listRarity","listRarityS","listRarityQ","calcAtk","input","typeSelected","findOne","name","type","typeAtk","atkM","atk","comAtk","Math","floor","com","charAtk","level","AtkParm","calcOutput","maxMux","totalDef","weaponSelected","chain","find","data","paraMux","plain","fly","includes","mons","cannon","skillCanDirUp","parameters","max","def","skillDefDown","skillMelIgdef","skillDefDownInt","struAtk","map","totalAtk","paraMuxTemp","skillAtkUp","skillAtkUpInt","damage","calcDam","skillDamUp","skillRecDamUp","frame1","round","f1","skillSpdUpF","skillSpdUpB","frame2","f2","dps","hit","update","tempDef","calcAtkDef","queryChar","rarity","idx","indexOf","reduce","output","pow","$and","weapon","$in","toString","char","push","initialState","HPParm","DefParm","outputChar","plainStatus","rarityStatus","reducerCalc","plainTemp","rarityTemp","state","arguments","length","undefined","action","calcTemp","charTemp","modelId","Object","assign","ref","refText","rare","modelValue","parseFloat","atF","modelStatus","reducerLayout","combineReducers","listLink","text","link","listDrawer","typeChange","types","plainChange","flyChange","monsChange","cannonChange","maxChange","inputChange","refChange","refSinChange","modelOpen","modelClose","charSelect","plainSelect","raritySelect","ToggleButton","handlePropFunc","_this$props","_this","props","propFunc","_this$props2","this","modelSwitch","modelTitle","modelClassActive","modelClassInactive","modelKey","bind","bClassName","react_default","a","createElement","className","onClick","key","Component","defaultProps","MenuType","typeTemp","htmlFor","i","ToggleButton_ToggleButton","connect","dispatch","bindActionCreators","MdlTableClass","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillReceiveProps","nextProps","_this$state","sortDir","sortKey","tempData","tableData","sort","b","setState","tableBody","componentDidUpdate","window","componentHandler","upgradeDom","handleChange","event","trId","target","id","checked","document","getElementById","style","backgroundColor","handleSort","_this$state2","newKey","newDir","tableFunction","renderTableHead","tableId","_this$state3","theadTempOut","theadClass","renderTableBody","tbodyTempOut","tdTempOut","output2","data2","j","onChange","assertThisInitialized","_this$props3","tableClass","IndexTable","renderPlain","renderRarity","containers_MenuType","MdlTableClass_MdlTableClass","Header","renderLink","href","src_containers_IndexTable","Drawer","MenuToggle","toggleTemp","toggleOut","InputBoxValue","handleInput","parseInt","value","isNaN","modelClass","pattern","MenuChar","InputBoxValue_InputBoxValue","MenuMax","maxTemp","MenuOptionsA","MenuOptionsB","renderCannonDirectHit","OutputTable","renderButton","Content","containers_MenuChar","containers_MenuToggle","containers_MenuMax","containers_MenuOptionsA","containers_MenuOptionsB","MenuOptionsC","src_containers_OutputTable","Footer","App","Header_Header","Drawer_Drawer","src_containers_Content","Footer_Footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","render","es","App_App","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4350ed57.chunk.js","sourcesContent":["export const TYPE_CHANGE = 'TYPE_CHANGE'\nexport const PLAIN_CHANGE = 'PLAIN_CHANGE'\nexport const FLY_CHANGE = 'FLY_CHANGE'\nexport const MONS_CHANGE = 'MONS_CHANGE'\nexport const MAX_CHANGE = 'MAX_CHANGE'\nexport const INPUT_CHANGE = 'INPUT_CHANGE'\nexport const REF_CHANGE = 'REF_CHANGE'\nexport const REF_SIN_CHANGE = 'REF_SIN_CHANGE'\nexport const CANNON_CHANGE = 'CANNON_CHANGE'\nexport const MODEL_OPEN = 'MODEL_OPEN'\nexport const MODEL_CLOSE = 'MODEL_CLOSE'\nexport const CHAR_SELECT = 'CHAR_SELECT'\nexport const PLAIN_SELECT = 'PLAIN_SELECT'\nexport const RARITY_SELECT = 'RARITY_SELECT'\n","import Lokijs from 'lokijs'\nimport weaponData from '../raw/weapons.json'\nimport typeData from '../raw/weaponTypes.json'\nimport charData from '../raw/chars.json'\n\nconst db = new Lokijs('db')\nexport const dbWeapon = db.addCollection('dbWeapon')\nexport const dbType = db.addCollection('dbType')\nexport const dbChar = db.addCollection('dbChar')\n\nweaponData.forEach(element => {\n  dbWeapon.insert(element)\n})\n\ntypeData.forEach(element => {\n  dbType.insert(element)\n})\n\ncharData.forEach(element => {\n  dbChar.insert(element)\n})\n","export const defaultLevel = 50 // define the default level\nexport const defaultHPParm = 100 // define the default hp parameter\nexport const defaultAtkParm = 100 // define the default atk parameter\nexport const defaultDefParm = 100 // define the default def parameter\nexport const defaultCompanion = 100 // define the default Companion parameter\n\nexport const defaultDef = 100 // define the default defense value\n\nexport const muxPlain = 1.3 // define the multiplier when attacker have plain\nexport const muxFlyBow = 1.5 // define the multiplier when bow attack a flying enemy\nexport const muxFlyMelee = 0.5 // define the multiplier when melee attack a flying enemy\nexport const muxMonsMelee = 0.5 // define the multiplier when physical attack a monster\nexport const muxCanDirect = 0.5 // define the multiplier when cannon direct hit\n\n// define the multiplier for each maximum step\n// export const muxMax = [1.16, 1.32, 1.48, 1.64, 1.8]\nexport const muxMax = {\n  max0: 1,\n  max1: 1.16,\n  max2: 1.32,\n  max3: 1.48,\n  max4: 1.64,\n  max5: 1.8\n}\n\nexport const valueProDam = 20 // define the promised damage when hit\nexport const valueFPS = 30 // define the system frame per second\nexport const valueMaxRef = 10 // define the maximum refine value\n\nexport const maxskillSpdUpF = 500 // define the maximum aspd skill value\nexport const maxskillSpdUpB = 100 // define the maximum aspd spell value\n\nexport const weaponAntiFly = [\n  'スローイングナイフ',\n  'ブーメランダガー',\n  'ウォシュレ',\n  'ダマスキナードナイフ',\n  '月光の短剣'\n]\nexport const weaponIgnoreDef = ['氏康の獅盾', '真・氏康の獅盾', 'ヴァリス改']\nexport const weaponIgnoreDefValue = 0.9\n\nexport const weaponIgnoreDef2 = ['ヴァリス', '幽閉の紅弓']\nexport const weaponIgnoreDef2Value = 0.92\n\nexport const weaponIgnoreDef3 = ['聖剣エクスカリバー']\nexport const weaponIgnoreDef3Value = 0.95\n\nexport const weaponAtkUp = ['義重の重槌', '真・義重の重槌']\nexport const weaponAtkUpValue = 50\n","export const listType = [\n  '刀',\n  '槍',\n  '槌',\n  '拳',\n  '盾',\n  '投剣',\n  '弓',\n  '石弓',\n  '鉄砲',\n  '大砲',\n  '法術',\n  '杖',\n  '歌舞',\n  '鈴',\n  '祓串'\n]\nexport const listTypeS = [\n  'sword',\n  'lance',\n  'hammer',\n  'fist',\n  'shield',\n  'kunai',\n  'bow',\n  'xbow',\n  'arqu',\n  'cannon',\n  'spell',\n  'staff',\n  'dance',\n  'bell',\n  'onusa'\n]\n\nexport const listBut = [\n  '無巨大化',\n  '巨大化一階',\n  '巨大化二階',\n  '巨大化三階',\n  '巨大化四階',\n  '巨大化五階'\n]\nexport const listButS = ['max0', 'max1', 'max2', 'max3', 'max4', 'max5']\n\nexport const listRef = [\n  '無精煉',\n  '全精煉+10',\n  '★4+10',\n  '★3+10',\n  '★2+10',\n  '★1+10'\n]\nexport const listRefS = ['ref0', 'refAll', 'ref4', 'ref3', 'ref2', 'ref1']\n\nexport const tableHead = [\n  '',\n  '★',\n  '名稱',\n  '精煉',\n  '攻擊',\n  '傷害',\n  'DPS',\n  '攻擊(f)',\n  '延遲(f)',\n  '特殊效果'\n]\nexport const tableInd = [\n  '',\n  'rare',\n  'name',\n  'refText',\n  'atk',\n  'damage',\n  'dps',\n  'frame1',\n  'frame2',\n  'text'\n]\n\nexport const tableCharHead = [\n  '',\n  '名稱',\n  '武器種',\n  '★',\n  '屬性',\n  '耐久係數',\n  '攻擊係數',\n  '防禦係數',\n  '係數合計'\n]\nexport const tableCharInd = [\n  '',\n  'name',\n  'weapon',\n  'rarity',\n  'plain',\n  'hpF',\n  'atF',\n  'dfF',\n  'totF'\n]\n\nexport const listMelee = ['sword', 'lance', 'hammer', 'fist', 'shield']\nexport const listMagic = ['spell', 'staff', 'dance', 'bell', 'onusa']\nexport const listPhys = [\n  'sword',\n  'lance',\n  'hammer',\n  'fist',\n  'shield',\n  'bow',\n  'xbow',\n  'arqu',\n  'cannon',\n  'kunai'\n]\n\nexport const listPlain = ['平', '平山', '山', '水']\nexport const listPlainS = [1, 2, 4, 8]\nconst listPQ1 = ['平']\nconst listPQ2 = ['平山']\nconst listPQ3 = ['平', '平山']\nconst listPQ4 = ['山']\nconst listPQ5 = ['平', '山']\nconst listPQ6 = ['平山', '山']\nconst listPQ7 = ['平', '平山', '山']\nconst listPQ8 = ['水']\nconst listPQ9 = ['平', '平水', '水']\nconst listPQ10 = ['平山', '平山水', '水']\nconst listPQ11 = ['平', '平山', '平水', '平山水', '水']\nconst listPQ12 = ['山', '山水', '水']\nconst listPQ13 = ['平', '山', '平水', '山水', '水']\nconst listPQ14 = ['平山', '山', '平山水', '山水', '水']\nconst listPQ15 = ['平', '平山', '山', '平水', '平山水', '山水', '水']\nexport const listPlainQ = [\n  listPQ1,\n  listPQ2,\n  listPQ3,\n  listPQ4,\n  listPQ5,\n  listPQ6,\n  listPQ7,\n  listPQ8,\n  listPQ9,\n  listPQ10,\n  listPQ11,\n  listPQ12,\n  listPQ13,\n  listPQ14,\n  listPQ15\n]\n\nexport const listRarity = [1, 2, 3, 4, 5, 6, 7, 8]\nexport const listRarityS = [1, 2, 4, 8, 16, 32, 64, 128]\nexport const listRarityQ = ['★1', '★2', '★3', '★4', '★5', '★6', '★7', '★8']\n","import { dbWeapon, dbType } from './database'\nimport { listMelee, listMagic, listPhys } from '../constants/ConstList'\nimport * as parameters from '../constants/ConstParameters'\n\n// ===============================================================================\n// calculate basic attack value for the character\n// ===============================================================================\n// Lv.Xでの城娘の能力値Y算出（※2017/08/08メンテ後）\n//\n//    計算式 … Y=INT(INT((A-B)/1000*X+B)*a)\n//        A … 武器種ごとのLv.1000の基本値\n//        B … 武器種ごとのLv.0の基本値\n//        a … 城娘ごとの能力値係數\n//    計算例：Lv.110の駿府城の攻撃の値（絆ボーナス・武器・施設は無しでの値）\n//        INT(INT((1234-50)/1000*110+50)*1.10)=198\n\nexport const calcAtk = input => {\n  const typeSelected = dbType.findOne({ name: input.type })\n  const typeAtk = (typeSelected.atkM - typeSelected.atk) / 1000\n  const comAtk = 1 + Math.floor(input.com / 10) / 100\n  let charAtk = Math.floor(typeAtk * input.level + typeSelected.atk)\n  charAtk = Math.floor((charAtk * input.AtkParm) / 100)\n  charAtk = Math.floor(charAtk * comAtk)\n  return charAtk\n}\n\nexport const calcDef = input => {\n  const typeSelected = dbType.findOne({ name: input.type })\n  const typeDef = (typeSelected.defM - typeSelected.def) / 1000\n  const comDef = 1 + Math.floor(input.com / 10) / 100\n  let charDef = Math.floor(typeDef * input.level + typeSelected.def)\n  charDef = Math.floor((charDef * input.DefParm) / 100)\n  charDef = Math.floor(charDef * comDef)\n  return charDef\n}\n\nexport const calcHp = input => {\n  const typeSelected = dbType.findOne({ name: input.type })\n  const typeHp = (typeSelected.hpM - typeSelected.hp) / 1000\n  const comHp = 1 + Math.floor(input.com / 10) / 100\n  let charHp = Math.floor(typeHp * input.level + typeSelected.hp)\n  charHp = Math.floor((charHp * input.HpParm) / 100)\n  charHp = Math.floor(charHp * comHp)\n  return charHp\n}\n\n// ===============================================================================\n// calculate dps for each weapon\n// ===============================================================================\n// 城娘の戦場配置後のステータス計算式\n//\t\t耐久・攻撃・防禦・範囲\n//\t\t＝(基本値×絆ボーナス×地形ボーナス＋裝備補正)×巨大化補正×最大係數の割合上昇系特技・計略補正＋全ての固定値繫上昇特技・計略補正\n//\n// 城プロのダメージ計算式\n//\t自身の攻撃力－対象の防禦力＝ダメージ\n//\n// 城娘の動作に関して\n//\t\t実行フレーム＝基本攻撃フレーム/(攻撃速度上昇割合+1)+隙フレーム/(隙速度上昇割合+1)\n//\t\t攻撃・隙 速度上昇割合＝裝備上昇割合＋特技計略上昇割合\n//\t\t※計算結果は小數點以下四捨五入\n\nexport const calcOutput = input => {\n  const weaponSelected = dbWeapon\n    .chain()\n    .find({ type: input.type })\n    .data()\n  let maxMux = 1\n  let paraMux = 1\n  let totalDef\n  let charAtk = calcAtk(input)\n\n  // ===============================================================\n  // 地形ボーナス\n  if (input.plain === 'plain') {\n    charAtk *= parameters.muxPlain\n  }\n\n  // ===============================================================\n  // 飛行敵に対する攻撃力ボーナス\n  if (input.fly === 'fly') {\n    if (input.type === 'bow') {\n      paraMux *= parameters.muxFlyBow\n    } else {\n      if (listMelee.includes(input.type)) {\n        paraMux *= parameters.muxFlyMelee\n      }\n    }\n  }\n\n  // ===============================================================\n  // 妖怪敵に対する攻撃力ボーナス\n  if (input.mons === 'mons') {\n    if (listPhys.includes(input.type)) {\n      paraMux *= parameters.muxMonsMelee\n    }\n  }\n\n  // ===============================================================\n  // 砲弾が敵に直撃した場合、攻撃力が50%アップ。\n  if (input.cannon === 'cannon' && input.type === 'cannon') {\n    if (input.skillCanDirUp === 0) {\n      paraMux *= 1 + parameters.muxCanDirect\n    } else {\n      paraMux *= 1 + input.skillCanDirUp / 100\n    }\n  }\n\n  // ===============================================================\n  // 巨大化補正\n  maxMux = parameters.muxMax[input.max]\n\n  // ===============================================================\n  // 兜防禦力計算\n  totalDef =\n    input.def *\n      (1 - input.skillDefDown / 100) *\n      (1 - input.skillMelIgdef / 100) -\n    input.skillDefDownInt\n\n  if (totalDef <= 0) {\n    totalDef = 0\n  } else {\n    if (listMagic.includes(input.type)) {\n      totalDef = 0\n    }\n  }\n\n  // ===============================================================\n  // 設施攻擊力計算\n  charAtk += input.struAtk\n\n  // ===============================================================\n  // ダメージ計算\n  weaponSelected.map(data => {\n    let totalAtk\n\n    if (parameters.weaponAntiFly.includes(data.name) && input.fly === 'fly') {\n      let paraMuxTemp = paraMux * 1.5\n      totalAtk =\n        ((charAtk + data.atk) * maxMux * (1 + input.skillAtkUp / 100) +\n          input.skillAtkUpInt) *\n        paraMuxTemp\n    } else if (\n      input.cannon === 'cannon' &&\n      input.type === 'hammer' &&\n      parameters.weaponAtkUp.includes(data.name)\n    ) {\n      let paraMuxTemp = paraMux * (1 + parameters.weaponAtkUpValue / 100)\n      totalAtk =\n        ((charAtk + data.atk) * maxMux * (1 + input.skillAtkUp / 100) +\n          input.skillAtkUpInt) *\n        paraMuxTemp\n    } else {\n      totalAtk =\n        ((charAtk + data.atk) * maxMux * (1 + input.skillAtkUp / 100) +\n          input.skillAtkUpInt) *\n        paraMux\n    }\n\n    data.damage = calcDam(\n      totalAtk,\n      totalDef,\n      data.name,\n      input.skillDamUp,\n      input.skillRecDamUp\n    )\n\n    data.frame1 = Math.round(data.f1 / (1 + input.skillSpdUpF / 100))\n    if (input.skillSpdUpB >= parameters.maxskillSpdUpB) {\n      data.frame2 = 0\n    } else {\n      data.frame2 = Math.round(data.f2 * (1 - input.skillSpdUpB / 100))\n    }\n    data.dps =\n      Math.floor(\n        ((data.damage * data.hit * parameters.valueFPS) /\n          (data.frame1 + data.frame2)) *\n          100\n      ) / 100\n\n    return data\n  })\n\n  dbWeapon.update(weaponSelected)\n\n  return weaponSelected\n}\n\nconst calcDam = (totalAtk, totalDef, name, skillDamUp, skillRecDamUp) => {\n  if (parameters.weaponIgnoreDef.includes(name)) {\n    let tempDef = Math.round(totalDef * parameters.weaponIgnoreDefValue)\n    return calcAtkDef(totalAtk, tempDef, skillDamUp, skillRecDamUp)\n  } else if (parameters.weaponIgnoreDef2.includes(name)) {\n    let tempDef = Math.round(totalDef * parameters.weaponIgnoreDef2Value)\n    return calcAtkDef(totalAtk, tempDef, skillDamUp, skillRecDamUp)\n  } else if (parameters.weaponIgnoreDef3.includes(name)) {\n    let tempDef = Math.round(totalDef * parameters.weaponIgnoreDef3Value)\n    return calcAtkDef(totalAtk, tempDef, skillDamUp, skillRecDamUp)\n  }\n  return calcAtkDef(totalAtk, totalDef, skillDamUp, skillRecDamUp)\n}\n\nconst calcAtkDef = (atk, def, skillDamUp, skillRecDamUp) => {\n  let damage\n  if (atk - parameters.valueProDam >= def) {\n    damage = Math.floor(\n      Math.floor(atk - def) * (1 + skillDamUp / 100) * (1 + skillRecDamUp / 100)\n    )\n  } else {\n    damage = Math.floor(\n      parameters.valueProDam *\n        (1 + skillDamUp / 100) *\n        (1 + skillRecDamUp / 100)\n    )\n  }\n  return damage\n}\n","// @flow\nimport { dbChar } from './database'\nimport {\n  listType,\n  listTypeS,\n  listPlainQ,\n  listRarity\n} from '../constants/ConstList'\n\nexport const queryChar = (type: string, plain: number, rarity: number) => {\n  if (listTypeS.includes(type)) {\n    let idx = listTypeS.indexOf(type)\n    return listRarity.reduce((output, data) => {\n      if (rarity & Math.pow(2, data - 1)) {\n        let charTemp = dbChar\n          .chain()\n          .find({\n            $and: [\n              { weapon: listType[idx] },\n              {\n                $and: [\n                  { plain: { $in: listPlainQ[plain - 1] } },\n                  { rarity: data.toString() }\n                ]\n              }\n            ]\n          })\n          .data()\n\n        charTemp.forEach(char => {\n          output.push(char)\n        })\n      }\n      return output\n    }, [])\n  }\n  return []\n}\n","import {\n  TYPE_CHANGE,\n  PLAIN_CHANGE,\n  MAX_CHANGE,\n  INPUT_CHANGE,\n  FLY_CHANGE,\n  MONS_CHANGE,\n  REF_CHANGE,\n  REF_SIN_CHANGE,\n  CANNON_CHANGE,\n  CHAR_SELECT,\n  PLAIN_SELECT,\n  RARITY_SELECT\n} from '../constants/ConstActionTypes'\n\nimport { dbWeapon, dbChar } from './database'\nimport * as parameters from '../constants/ConstParameters'\nimport { calcOutput, calcAtk } from './calcOutput'\nimport { queryChar } from './dbQuery'\n\n// ===============================================================================\n// initial status\n// ===============================================================================\n\nconst initialState = {\n  type: 'sword',\n  plain: 'plain',\n  fly: '',\n  mons: '',\n  cannon: 'cannon',\n  max: 'max0',\n  level: parameters.defaultLevel,\n  HPParm: parameters.defaultHPParm,\n  AtkParm: parameters.defaultAtkParm,\n  DefParm: parameters.defaultDefParm,\n  com: parameters.defaultCompanion,\n  atk: 0,\n  def: parameters.defaultDef,\n  skillAtkUp: 0,\n  skillDefDown: 0,\n  skillSpdUpF: 0,\n  skillSpdUpB: 0,\n  skillAtkUpInt: 0,\n  skillDefDownInt: 0,\n  skillDamUp: 0,\n  skillRecDamUp: 0,\n  struAtk: 0,\n  skillCanDirUp: 0,\n  skillMelIgdef: 0,\n  output: [],\n  outputChar: queryChar('sword', 15, 64 | 128),\n  plainStatus: 1 | 2 | 4 | 8,\n  rarityStatus: 64 | 128\n}\n\n// ===============================================================================\n// reducer main function\n// ===============================================================================\n\nconst reducerCalc = (state = initialState, action) => {\n  let calcTemp = {}\n  let weaponSelected = []\n  let charTemp = []\n  let plainTemp\n  let rarityTemp\n\n  switch (action.type) {\n    // ===============================================================================\n    // weapon types change\n    // ===============================================================================\n    case TYPE_CHANGE:\n      calcTemp = state\n      calcTemp.type = action.modelId\n      return Object.assign({}, state, {\n        type: action.modelId,\n        output: calcOutput(calcTemp),\n        atk: calcAtk(calcTemp),\n        outputChar: queryChar(\n          action.modelId,\n          state.plainStatus,\n          state.rarityStatus\n        )\n      })\n    // ===============================================================================\n    // plain bonus switch\n    // ===============================================================================\n    case PLAIN_CHANGE:\n      if (state.plain === 'plain') {\n        calcTemp = state\n        calcTemp.plain = ''\n      } else {\n        calcTemp = state\n        calcTemp.plain = 'plain'\n      }\n      return Object.assign({}, state, {\n        plain: calcTemp.plain,\n        output: calcOutput(calcTemp)\n      })\n    // ===============================================================================\n    // enemy fly status switch\n    // ===============================================================================\n    case FLY_CHANGE:\n      if (state.fly === 'fly') {\n        calcTemp = state\n        calcTemp.fly = ''\n      } else {\n        calcTemp = state\n        calcTemp.fly = 'fly'\n      }\n      return Object.assign({}, state, {\n        fly: calcTemp.fly,\n        output: calcOutput(calcTemp)\n      })\n    // ===============================================================================\n    // enemy monster status switch\n    // ===============================================================================\n    case MONS_CHANGE:\n      if (state.mons === 'mons') {\n        calcTemp = state\n        calcTemp.mons = ''\n      } else {\n        calcTemp = state\n        calcTemp.mons = 'mons'\n      }\n      return Object.assign({}, state, {\n        mons: calcTemp.mons,\n        output: calcOutput(calcTemp)\n      })\n    // ===============================================================================\n    // cannon direct hit switch\n    // ===============================================================================\n    case CANNON_CHANGE:\n      if (state.cannon === 'cannon') {\n        calcTemp = state\n        calcTemp.cannon = ''\n      } else {\n        calcTemp = state\n        calcTemp.cannon = 'cannon'\n      }\n      return Object.assign({}, state, {\n        cannon: calcTemp.cannon,\n        output: calcOutput(calcTemp)\n      })\n    // ===============================================================================\n    // maximum level switch\n    // ===============================================================================\n    case MAX_CHANGE:\n      calcTemp = state\n      calcTemp.max = action.modelId\n      return Object.assign({}, state, {\n        max: action.modelId,\n        output: calcOutput(calcTemp)\n      })\n    // ===============================================================================\n    // weapons refine change\n    // ===============================================================================\n    case REF_CHANGE:\n      switch (action.modelId) {\n        case 'ref0':\n          weaponSelected = dbWeapon.chain().data()\n          weaponSelected.map(data => {\n            data.atk -= data.ref\n            data.ref = 0\n            data.refText = '+0'\n            return data\n          })\n          dbWeapon.update(weaponSelected)\n          calcTemp = state\n          return Object.assign({}, state, {\n            output: calcOutput(calcTemp)\n          })\n        case 'refAll':\n          weaponSelected = dbWeapon.chain().data()\n          weaponSelected.map(data => {\n            data.atk -= data.ref\n            data.atk += parameters.valueMaxRef\n            data.ref = parameters.valueMaxRef\n            data.refText = '+' + parameters.valueMaxRef.toString()\n            return data\n          })\n          dbWeapon.update(weaponSelected)\n          calcTemp = state\n          return Object.assign({}, state, {\n            output: calcOutput(calcTemp)\n          })\n        case 'ref4':\n          weaponSelected = dbWeapon\n            .chain()\n            .find({ rare: 4 })\n            .data()\n          weaponSelected.map(data => {\n            data.atk -= data.ref\n            data.atk += parameters.valueMaxRef\n            data.ref = parameters.valueMaxRef\n            data.refText = '+' + parameters.valueMaxRef.toString()\n            return data\n          })\n          dbWeapon.update(weaponSelected)\n          calcTemp = state\n          return Object.assign({}, state, {\n            output: calcOutput(calcTemp)\n          })\n        case 'ref3':\n          weaponSelected = dbWeapon\n            .chain()\n            .find({ rare: 3 })\n            .data()\n          weaponSelected.map(data => {\n            data.atk -= data.ref\n            data.atk += parameters.valueMaxRef\n            data.ref = parameters.valueMaxRef\n            data.refText = '+' + parameters.valueMaxRef.toString()\n            return data\n          })\n          dbWeapon.update(weaponSelected)\n          calcTemp = state\n          return Object.assign({}, state, {\n            output: calcOutput(calcTemp)\n          })\n        case 'ref2':\n          weaponSelected = dbWeapon\n            .chain()\n            .find({ rare: 2 })\n            .data()\n          weaponSelected.map(data => {\n            data.atk -= data.ref\n            data.atk += parameters.valueMaxRef\n            data.ref = parameters.valueMaxRef\n            data.refText = '+' + parameters.valueMaxRef.toString()\n            return data\n          })\n          dbWeapon.update(weaponSelected)\n          calcTemp = state\n          return Object.assign({}, state, {\n            output: calcOutput(calcTemp)\n          })\n        case 'ref1':\n          weaponSelected = dbWeapon\n            .chain()\n            .find({ rare: 1 })\n            .data()\n          weaponSelected.map(data => {\n            data.atk -= data.ref\n            data.atk += parameters.valueMaxRef\n            data.ref = parameters.valueMaxRef\n            data.refText = '+' + parameters.valueMaxRef.toString()\n            return data\n          })\n          dbWeapon.update(weaponSelected)\n          calcTemp = state\n          return Object.assign({}, state, {\n            output: calcOutput(calcTemp)\n          })\n        default:\n          return state\n      }\n    // ===============================================================================\n    // weapon refine change toggle\n    // ===============================================================================\n    case REF_SIN_CHANGE:\n      weaponSelected = dbWeapon.findOne({ name: action.modelId })\n      if (weaponSelected.ref === parameters.valueMaxRef) {\n        weaponSelected.atk -= parameters.valueMaxRef\n        weaponSelected.ref = 0\n        weaponSelected.refText = '+0'\n      } else {\n        weaponSelected.atk += 1\n        weaponSelected.ref += 1\n        weaponSelected.refText = '+' + weaponSelected.ref.toString()\n      }\n      dbWeapon.update(weaponSelected)\n      calcTemp = state\n      return Object.assign({}, state, {\n        output: calcOutput(calcTemp)\n      })\n    // ===============================================================================\n    // text input change\n    // ===============================================================================\n    case INPUT_CHANGE:\n      switch (action.modelId) {\n        case 'level':\n          calcTemp = state\n          calcTemp.level = action.modelValue\n          return Object.assign({}, state, {\n            level: action.modelValue,\n            atk: calcAtk(calcTemp),\n            output: calcOutput(calcTemp)\n          })\n        case 'AtkParm':\n          calcTemp = state\n          calcTemp.AtkParm = action.modelValue\n          return Object.assign({}, state, {\n            AtkParm: action.modelValue,\n            atk: calcAtk(calcTemp),\n            output: calcOutput(calcTemp)\n          })\n        case 'com':\n          calcTemp = state\n          calcTemp.com = action.modelValue\n          return Object.assign({}, state, {\n            com: action.modelValue,\n            atk: calcAtk(calcTemp),\n            output: calcOutput(calcTemp)\n          })\n        case 'atk':\n          calcTemp = state\n          calcTemp.atk = action.modelValue\n          return Object.assign({}, state, {\n            atk: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'def':\n          calcTemp = state\n          calcTemp.def = action.modelValue\n          return Object.assign({}, state, {\n            def: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillAtkUp':\n          calcTemp = state\n          calcTemp.skillAtkUp = action.modelValue\n          return Object.assign({}, state, {\n            skillAtkUp: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillAtkUpInt':\n          calcTemp = state\n          calcTemp.skillAtkUpInt = action.modelValue\n          return Object.assign({}, state, {\n            skillAtkUpInt: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillDefDown':\n          calcTemp = state\n          calcTemp.skillDefDown = action.modelValue\n          return Object.assign({}, state, {\n            skillDefDown: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillDefDownInt':\n          calcTemp = state\n          calcTemp.skillDefDownInt = action.modelValue\n          return Object.assign({}, state, {\n            skillDefDownInt: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillSpdUpF':\n          calcTemp = state\n          if (action.modelValue >= parameters.maxskillSpdUpF) {\n            calcTemp.skillSpdUpF = parameters.maxskillSpdUpF\n          } else {\n            calcTemp.skillSpdUpF = action.modelValue\n          }\n          return Object.assign({}, state, {\n            skillSpdUpF: calcTemp.skillSpdUpF,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillSpdUpB':\n          calcTemp = state\n          if (action.modelValue >= parameters.maxskillSpdUpB) {\n            calcTemp.skillSpdUpB = parameters.maxskillSpdUpB\n          } else {\n            calcTemp.skillSpdUpB = action.modelValue\n          }\n          return Object.assign({}, state, {\n            skillSpdUpB: calcTemp.skillSpdUpB,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillDamUp':\n          calcTemp = state\n          calcTemp.skillDamUp = action.modelValue\n          return Object.assign({}, state, {\n            skillDamUp: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillRecDamUp':\n          calcTemp = state\n          calcTemp.skillRecDamUp = action.modelValue\n          return Object.assign({}, state, {\n            skillRecDamUp: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'struAtk':\n          calcTemp = state\n          calcTemp.struAtk = action.modelValue\n          return Object.assign({}, state, {\n            struAtk: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillCanDirUp':\n          calcTemp = state\n          calcTemp.skillCanDirUp = action.modelValue\n          return Object.assign({}, state, {\n            skillCanDirUp: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        case 'skillMelIgdef':\n          calcTemp = state\n          calcTemp.skillMelIgdef = action.modelValue\n          return Object.assign({}, state, {\n            skillMelIgdef: action.modelValue,\n            output: calcOutput(calcTemp)\n          })\n        default:\n          return state\n      }\n    // ===============================================================================\n    // character select change\n    // ===============================================================================\n    case CHAR_SELECT:\n      calcTemp = state\n      charTemp = dbChar.findOne({ name: action.modelId })\n      calcTemp.AtkParm = Math.round(parseFloat(charTemp.atF, 10) * 100)\n      return Object.assign({}, state, {\n        AtkParm: Math.round(parseFloat(charTemp.atF, 10) * 100),\n        output: calcOutput(calcTemp),\n        atk: calcAtk(calcTemp)\n      })\n    // ===============================================================================\n    // character plain select change\n    // ===============================================================================\n    case PLAIN_SELECT:\n      plainTemp = state.plainStatus\n      if (plainTemp & action.modelId) {\n        plainTemp ^= action.modelId\n      } else {\n        plainTemp |= action.modelId\n      }\n\n      return Object.assign({}, state, {\n        plainStatus: plainTemp,\n        outputChar: queryChar(state.type, plainTemp, state.rarityStatus)\n      })\n    // ===============================================================================\n    // character rarity select change\n    // ===============================================================================\n    case RARITY_SELECT:\n      rarityTemp = state.rarityStatus\n      if (rarityTemp & action.modelId) {\n        rarityTemp ^= action.modelId\n      } else {\n        rarityTemp |= action.modelId\n      }\n\n      return Object.assign({}, state, {\n        rarityStatus: rarityTemp,\n        outputChar: queryChar(state.type, state.plainStatus, rarityTemp)\n      })\n    // ===============================================================================\n    // default status\n    // ===============================================================================\n    default:\n      calcTemp = state\n      return Object.assign({}, state, {\n        atk: calcAtk(calcTemp),\n        output: calcOutput(calcTemp)\n      })\n  }\n}\n\nexport default reducerCalc\n","import {\n  MODEL_OPEN,\n  MODEL_CLOSE,\n  CHAR_SELECT\n} from '../constants/ConstActionTypes'\n\nconst initialState = {\n  modelStatus: '0'\n}\n\nconst reducerLayout = (state = initialState, action) => {\n  switch (action.type) {\n    case MODEL_OPEN:\n      return Object.assign({}, state, {\n        modelStatus: action.modelId\n      })\n    case MODEL_CLOSE:\n    case CHAR_SELECT:\n      return Object.assign({}, state, {\n        modelStatus: '0'\n      })\n    default:\n      return state\n  }\n}\n\nexport default reducerLayout\n","import { combineReducers } from 'redux'\nimport { default as reducerCalc } from './reducerCalc'\nimport { default as reducerLayout } from './reducerLayout'\n\nexport default combineReducers({\n  reducerCalc,\n  reducerLayout\n})\n","export const listLink = [\n  { text: '城プロRE', link: 'http://www.dmm.com/netgame_s/oshirore/' },\n  { text: '攻略wiki', link: 'http://scre.swiki.jp/' },\n  {\n    text: 'くろもじ屋',\n    link: 'http://www116.sakura.ne.jp/~kuromoji/castle_enemy.htm'\n  },\n  { text: 'ダメージ計算機', link: 'http://cascal.html.xdomain.jp/cascal/' }\n]\n\nexport const listDrawer = [\n  { text: '城プロRE', link: 'http://www.dmm.com/netgame_s/oshirore/' },\n  { text: 'React', link: 'https://facebook.github.io/react/' },\n  { text: 'Redux', link: 'http://redux.js.org/' },\n  { text: 'Material Design Lite', link: 'https://getmdl.io/' },\n  { text: 'LokiJS', link: 'http://lokijs.org/' }\n]\n","import * as types from '../constants/ConstActionTypes'\n\nexport function typeChange(modelId) {\n  return {\n    type: types.TYPE_CHANGE,\n    modelId\n  }\n}\n\nexport function plainChange() {\n  return {\n    type: types.PLAIN_CHANGE\n  }\n}\n\nexport function flyChange() {\n  return {\n    type: types.FLY_CHANGE\n  }\n}\n\nexport function monsChange() {\n  return {\n    type: types.MONS_CHANGE\n  }\n}\n\nexport function cannonChange() {\n  return {\n    type: types.CANNON_CHANGE\n  }\n}\n\nexport function maxChange(modelId) {\n  return {\n    type: types.MAX_CHANGE,\n    modelId\n  }\n}\n\nexport function inputChange(modelId, modelValue) {\n  return {\n    type: types.INPUT_CHANGE,\n    modelId,\n    modelValue\n  }\n}\n\nexport function refChange(modelId) {\n  return {\n    type: types.REF_CHANGE,\n    modelId\n  }\n}\n\nexport function refSinChange(modelId) {\n  return {\n    type: types.REF_SIN_CHANGE,\n    modelId\n  }\n}\n\nexport function modelOpen(modelId) {\n  return {\n    type: types.MODEL_OPEN,\n    modelId\n  }\n}\n\nexport function modelClose(modelId) {\n  return {\n    type: types.MODEL_CLOSE,\n    modelId\n  }\n}\n\nexport function charSelect(modelId) {\n  return {\n    type: types.CHAR_SELECT,\n    modelId\n  }\n}\n\nexport function plainSelect(modelId) {\n  return {\n    type: types.PLAIN_SELECT,\n    modelId\n  }\n}\n\nexport function raritySelect(modelId) {\n  return {\n    type: types.RARITY_SELECT,\n    modelId\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ToggleButton extends Component {\n  handlePropFunc = () => {\n    const { propFunc, modelId } = this.props\n    propFunc(modelId)\n  }\n\n  render() {\n    const {\n      modelSwitch,\n      modelTitle,\n      modelId,\n      modelClassActive,\n      modelClassInactive,\n      modelKey\n    } = this.props\n    let handlePropFunc = this.handlePropFunc.bind(this)\n    let bClassName =\n      modelSwitch === modelId ? modelClassActive : modelClassInactive\n\n    return (\n      <button className={bClassName} onClick={handlePropFunc} key={modelKey}>\n        {modelTitle}\n      </button>\n    )\n  }\n}\n\nToggleButton.propTypes = {\n  modelKey: PropTypes.string,\n  modelSwitch: PropTypes.string,\n  modelTitle: PropTypes.string,\n  modelId: PropTypes.string,\n  modelClassActive: PropTypes.string,\n  modelClassInactive: PropTypes.string,\n  propFunc: PropTypes.func\n}\n\nToggleButton.defaultProps = {\n  modelKey: 'ToggleButton',\n  modelSwitch: '0',\n  modelTitle: 'ToggleButton',\n  modelId: 'ToggleButton',\n  modelClassActive:\n    'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary',\n  modelClassInactive:\n    'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { typeChange } from '../actions'\nimport ToggleButton from '../components/ToggleButton'\nimport { listType, listTypeS } from '../constants/ConstList'\n\nclass MenuType extends Component {\n  render() {\n    const { type, typeChange } = this.props\n    const typeTemp = (\n      <label key={'inputPlainType_label'} htmlFor=\"weaponType\">\n        武器種：\n      </label>\n    )\n\n    return listType.reduce(\n      (output, data, i) => {\n        output.push(\n          <ToggleButton\n            key={'inputPlainType' + i.toString()}\n            modelKey={'inputType' + i.toString()}\n            modelSwitch={type}\n            modelTitle={data}\n            propFunc={modelId => {\n              typeChange(modelId)\n            }}\n            modelId={listTypeS[i]}\n            modelClassActive={\n              'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n            }\n            modelClassInactive={\n              'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n            }\n          />\n        )\n        return output\n      },\n      [typeTemp]\n    )\n  }\n}\n\nMenuType.propTypes = {\n  type: PropTypes.string.isRequired,\n  typeChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    type: state.reducerCalc.type\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    typeChange: bindActionCreators(typeChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuType)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class MdlTableClass extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    const tempData = this.props.tableData\n    tempData.sort((a, b) => b.dps - a.dps)\n\n    this.state = {\n      tableBody: tempData,\n      sortKey: 'dps',\n      sortDir: 1\n    }\n    this.handleSort = this.handleSort.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handlePropFunc = this.handlePropFunc.bind(this)\n  }\n\n  componentWillReceiveProps = nextProps => {\n    const { sortDir, sortKey } = this.state\n    const tempData = nextProps.tableData\n\n    if (sortDir) {\n      tempData.sort((a, b) => b[sortKey] - a[sortKey])\n    } else {\n      tempData.sort((a, b) => a[sortKey] - b[sortKey])\n    }\n\n    this.setState({\n      tableBody: tempData\n    })\n  }\n\n  componentDidUpdate = () => {\n    window.componentHandler.upgradeDom()\n  }\n\n  handleChange = event => {\n    const trId = event.target.id + 'tr'\n    if (event.target.checked) {\n      document.getElementById(trId).style.backgroundColor = '#f5f5f5'\n    } else {\n      document.getElementById(trId).style.backgroundColor = 'transparent'\n    }\n  }\n\n  handleSort = event => {\n    const { sortDir, sortKey, tableBody } = this.state\n    const newKey = event.target.id\n    const tempData = tableBody\n    let newDir = sortDir\n\n    if (newKey === sortKey) {\n      if (sortDir) {\n        newDir = 0\n      } else {\n        newDir = 1\n      }\n    }\n\n    if (newDir) {\n      tempData.sort((a, b) => b[newKey] - a[newKey])\n    } else {\n      tempData.sort((a, b) => a[newKey] - b[newKey])\n    }\n\n    this.setState({\n      tableBody: tempData,\n      sortKey: newKey,\n      sortDir: newDir\n    })\n  }\n\n  handlePropFunc = input => {\n    this.props.tableFunction(input)\n  }\n\n  renderTableHead = () => {\n    const { tableHead, tableId, tableInd } = this.props\n    const { sortDir, sortKey } = this.state\n\n    const theadTempOut = tableHead.reduce((output, data, i) => {\n      let theadClass = ''\n      if (tableInd[i] === sortKey) {\n        if (sortDir === 1) {\n          theadClass = 'theadOver'\n        } else {\n          theadClass = 'theadUnder'\n        }\n      }\n\n      output.push(\n        <th\n          className={theadClass}\n          id={tableInd[i]}\n          key={tableId + ' th' + i.toString()}\n          onClick={this.handleSort}>\n          {data}\n        </th>\n      )\n      return output\n    }, [])\n\n    return (\n      <thead>\n        <tr>{theadTempOut}</tr>\n      </thead>\n    )\n  }\n\n  renderTableBody = () => {\n    const { tableId, tableInd } = this.props\n    const { tableBody } = this.state\n\n    const tbodyTempOut = tableBody.reduce((output, data, i) => {\n      const tdTempOut = tableInd.reduce((output2, data2, j) => {\n        if (j === 0) {\n          output2.push(\n            <td key={tableId + ' td' + i.toString() + j.toString()}>\n              <label\n                className=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\"\n                htmlFor={tableId + i.toString()}>\n                <input\n                  type=\"checkbox\"\n                  id={tableId + i.toString()}\n                  className=\"mdl-checkbox__input\"\n                  onChange={this.handleChange}\n                />\n              </label>\n            </td>\n          )\n        } else {\n          output2.push(\n            <td\n              key={tableId + ' td' + i.toString() + j.toString()}\n              onClick={() => {\n                this.handlePropFunc(data.name)\n              }}>\n              {data[data2]}\n            </td>\n          )\n        }\n        return output2\n      }, [])\n      output.push(\n        <tr\n          key={tableId + ' th' + i.toString()}\n          id={tableId + i.toString() + 'tr'}>\n          {tdTempOut}\n        </tr>\n      )\n      return output\n    }, [])\n\n    return <tbody>{tbodyTempOut}</tbody>\n  }\n\n  render() {\n    const { tableClass, tableId } = this.props\n\n    return (\n      <table className={tableClass} id={tableId}>\n        {this.renderTableHead()}\n        {this.renderTableBody()}\n      </table>\n    )\n  }\n}\n\nMdlTableClass.propTypes = {\n  tableId: PropTypes.string,\n  tableInd: PropTypes.array,\n  tableHead: PropTypes.array,\n  tableData: PropTypes.array,\n  tableClass: PropTypes.string,\n  tableFunction: PropTypes.func\n}\n\nMdlTableClass.defaultProps = {\n  tableId: 'tableId',\n  tableClass: 'tableClass'\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport MenuType from './MenuType'\n\nimport { modelClose, charSelect, plainSelect, raritySelect } from '../actions'\nimport ToggleButton from '../components/ToggleButton'\nimport MdlTableClass from '../components/MdlTableClass'\nimport {\n  tableCharHead,\n  tableCharInd,\n  listPlain,\n  listPlainS,\n  listRarityS,\n  listRarityQ\n} from '../constants/ConstList'\nimport './IndexTable.css'\n\nclass IndexTable extends Component {\n  componentDidUpdate = () => {\n    window.componentHandler.upgradeDom()\n  }\n\n  renderPlain = () => {\n    const { plainStatus, plainSelect } = this.props\n    const plainTemp = (\n      <label key={'indexButton_plain'} htmlFor=\"indexPlain\">\n        屬性：\n      </label>\n    )\n    return listPlain.reduce(\n      (output, data, i) => {\n        output.push(\n          <ToggleButton\n            key={'indexPlain' + i.toString()}\n            modelKey={'indexPlain' + i.toString()}\n            modelSwitch={(plainStatus & listPlainS[i]).toString()}\n            modelTitle={data}\n            propFunc={modelId => {\n              plainSelect(modelId)\n            }}\n            modelId={listPlainS[i].toString()}\n            modelClassActive={\n              'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n            }\n            modelClassInactive={\n              'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n            }\n          />\n        )\n        return output\n      },\n      [plainTemp]\n    )\n  }\n\n  renderRarity = () => {\n    const { rarityStatus, raritySelect } = this.props\n    const rarityTemp = (\n      <label key={'indexButton_rarity'} htmlFor=\"indexPlain\">\n        稀有度：\n      </label>\n    )\n    return listRarityQ.reduce(\n      (output, data, i) => {\n        output.push(\n          <ToggleButton\n            key={'indexPlain' + i.toString()}\n            modelKey={'indexPlain' + i.toString()}\n            modelSwitch={(rarityStatus & listRarityS[i]).toString()}\n            modelTitle={data}\n            propFunc={modelId => {\n              raritySelect(modelId)\n            }}\n            modelId={listRarityS[i].toString()}\n            modelClassActive={\n              'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n            }\n            modelClassInactive={\n              'type-button mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n            }\n          />\n        )\n        return output\n      },\n      [rarityTemp]\n    )\n  }\n\n  render() {\n    const { modelStatus, modelClose, outputChar, charSelect } = this.props\n\n    if (modelStatus === '1') {\n      return (\n        <div className=\"modal\">\n          <button\n            className=\"modal-close mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect\"\n            onClick={modelClose}>\n            <div className=\"material-icons\">clear</div>\n          </button>\n          <div className=\"modal-content mdl-color--white mdl-color-text--grey-800 \">\n            <div className=\"char-type-button\">\n              <MenuType />\n            </div>\n            <div className=\"char-rarity-button\">{this.renderRarity()}</div>\n            <div className=\"char-plain-button\">{this.renderPlain()}</div>\n            <div>\n              <MdlTableClass\n                tableId={'charTable'}\n                tableInd={tableCharInd}\n                tableHead={tableCharHead}\n                tableData={outputChar}\n                tableClass={\n                  'charTable mdl-data-table mdl-js-data-table mdl-shadow--2dp'\n                }\n                tableFunction={modelId => {\n                  charSelect(modelId)\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return null\n  }\n}\n\nIndexTable.propTypes = {\n  charSelect: PropTypes.func.isRequired,\n  outputChar: PropTypes.array.isRequired,\n  modelStatus: PropTypes.string.isRequired,\n  modelClose: PropTypes.func.isRequired,\n  plainStatus: PropTypes.number.isRequired,\n  plainSelect: PropTypes.func.isRequired,\n  rarityStatus: PropTypes.number.isRequired,\n  raritySelect: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    modelStatus: state.reducerLayout.modelStatus,\n    outputChar: state.reducerCalc.outputChar,\n    plainStatus: state.reducerCalc.plainStatus,\n    rarityStatus: state.reducerCalc.rarityStatus\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    charSelect: bindActionCreators(charSelect, dispatch),\n    modelClose: bindActionCreators(modelClose, dispatch),\n    plainSelect: bindActionCreators(plainSelect, dispatch),\n    raritySelect: bindActionCreators(raritySelect, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndexTable)\n","import React, { Component } from 'react'\nimport { listLink } from '../constants/ConstLink'\nimport IndexTable from './IndexTable'\nimport './Header.css'\n\nexport default class Header extends Component {\n  renderLink = () => {\n    return listLink.reduce((output, data, i) => {\n      output.push(\n        <a\n          className=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary\"\n          key={'header-link' + i.toString()}\n          href={data.link}>\n          {data.text}\n        </a>\n      )\n      return output\n    }, [])\n  }\n\n  render() {\n    return (\n      <header className=\"demo-header mdl-layout__header mdl-color--grey-100 mdl-color-text--grey-800\">\n        <IndexTable />\n        <div className=\"mdl-layout__header-row mdl-shadow--4dp\">\n          <span className=\"mdl-layout-title\">\n            <b>城プロRE 武器傷害機算機 蓬萊パイルバンカー</b>\n          </span>\n          <div className=\"mdl-layout-spacer\" />\n          <nav className=\"mdl-navigation\">{this.renderLink()}</nav>\n        </div>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { listDrawer } from '../constants/ConstLink'\nimport './Drawer.css'\n\nexport default class Drawer extends Component {\n  renderLink = () => {\n    return listDrawer.reduce((output, data, i) => {\n      output.push(\n        <a\n          className=\"mdl-navigation__link mdl-typography--subhead\"\n          key={'drawer-link' + i.toString()}\n          href={data.link}>\n          {data.text}\n        </a>\n      )\n      return output\n    }, [])\n  }\n\n  render() {\n    return (\n      <div className=\"mdl-layout__drawer\">\n        <span className=\"mdl-layout-title mdl-typography--subhead\">\n          Reference\n        </span>\n        <nav className=\"mdl-navigation\">{this.renderLink()}</nav>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { plainChange, flyChange, monsChange, cannonChange } from '../actions'\nimport ToggleButton from '../components/ToggleButton'\n\nclass MenuToggle extends Component {\n  render() {\n    const {\n      plain,\n      plainChange,\n      fly,\n      flyChange,\n      mons,\n      monsChange,\n      cannon,\n      cannonChange,\n      type\n    } = this.props\n    let toggleTemp = (\n      <label key={'inputType_toggle_label'} htmlFor=\"plainType\">\n        地形適性：\n      </label>\n    )\n    const toggleOut = []\n    toggleOut.push(toggleTemp)\n    toggleTemp = (\n      <ToggleButton\n        key={'inputType plain'}\n        modelKey={'inputType plain'}\n        modelSwitch={plain}\n        modelTitle={'地形適性あり'}\n        propFunc={modelId => {\n          plainChange(modelId)\n        }}\n        modelId={'plain'}\n        modelClassActive={\n          'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n        }\n        modelClassInactive={\n          'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n        }\n      />\n    )\n    toggleOut.push(toggleTemp)\n\n    toggleTemp = (\n      <label key={'inputFly_toggle_label'} htmlFor=\"flyType\">\n        飛行兜：\n      </label>\n    )\n    toggleOut.push(toggleTemp)\n    toggleTemp = (\n      <ToggleButton\n        key={'inputType fly'}\n        modelKey={'inputType fly'}\n        modelSwitch={fly}\n        modelTitle={'飛行兜あり'}\n        propFunc={modelId => {\n          flyChange(modelId)\n        }}\n        modelId={'fly'}\n        modelClassActive={\n          'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n        }\n        modelClassInactive={\n          'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n        }\n      />\n    )\n    toggleOut.push(toggleTemp)\n\n    toggleTemp = (\n      <label key={'inputMons_toggle_label'} htmlFor=\"flyType\">\n        妖怪：\n      </label>\n    )\n    toggleOut.push(toggleTemp)\n    toggleTemp = (\n      <ToggleButton\n        key={'inputType mons'}\n        modelKey={'inputType mons'}\n        modelSwitch={mons}\n        modelTitle={'妖怪あり'}\n        propFunc={modelId => {\n          monsChange(modelId)\n        }}\n        modelId={'mons'}\n        modelClassActive={\n          'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n        }\n        modelClassInactive={\n          'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n        }\n      />\n    )\n    toggleOut.push(toggleTemp)\n\n    if (type === 'cannon' || type === 'hammer') {\n      toggleTemp = (\n        <label key={'inputCannon_toggle_label'} htmlFor=\"cannonType\">\n          直擊：\n        </label>\n      )\n      toggleOut.push(toggleTemp)\n      toggleTemp = (\n        <ToggleButton\n          key={'inputType cannon'}\n          modelKey={'inputType cannon'}\n          modelSwitch={cannon}\n          modelTitle={'直擊あり'}\n          propFunc={modelId => {\n            cannonChange(modelId)\n          }}\n          modelId={'cannon'}\n          modelClassActive={\n            'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n          }\n          modelClassInactive={\n            'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n          }\n        />\n      )\n      toggleOut.push(toggleTemp)\n    }\n    return toggleOut\n  }\n}\n\nMenuToggle.propTypes = {\n  type: PropTypes.string.isRequired,\n  plain: PropTypes.string.isRequired,\n  cannon: PropTypes.string.isRequired,\n  fly: PropTypes.string.isRequired,\n  mons: PropTypes.string.isRequired,\n  plainChange: PropTypes.func.isRequired,\n  flyChange: PropTypes.func.isRequired,\n  monsChange: PropTypes.func.isRequired,\n  cannonChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    type: state.reducerCalc.type,\n    plain: state.reducerCalc.plain,\n    cannon: state.reducerCalc.cannon,\n    fly: state.reducerCalc.fly,\n    mons: state.reducerCalc.mons\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    plainChange: bindActionCreators(plainChange, dispatch),\n    flyChange: bindActionCreators(flyChange, dispatch),\n    monsChange: bindActionCreators(monsChange, dispatch),\n    cannonChange: bindActionCreators(cannonChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuToggle)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as parameters from '../constants/ConstParameters'\n\nexport default class InputBoxValue extends Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      text: this.props.modelValue\n    }\n    this.handleInput = this.handleInput.bind(this)\n  }\n\n  componentWillReceiveProps = nextProps => {\n    this.setState({\n      text: nextProps.modelValue\n    })\n  }\n\n  handleInput = event => {\n    const { propFunc } = this.props\n    const modelId = event.target.id\n    let modelValue = parseInt(event.target.value, 10)\n\n    if (isNaN(modelValue)) {\n      modelValue = 0\n    } else if (\n      modelId === 'skillSpdUpF' &&\n      modelValue > parameters.maxskillSpdUpF\n    ) {\n      modelValue = parameters.maxskillSpdUpF\n    } else if (\n      modelId === 'skillSpdUpB' &&\n      modelValue > parameters.maxskillSpdUpB\n    ) {\n      modelValue = parameters.maxskillSpdUpB\n    }\n\n    this.setState({ text: modelValue })\n    propFunc(modelId, modelValue)\n  }\n\n  render() {\n    const { modelTitle, modelId, modelClass } = this.props\n\n    return (\n      <div\n        className={\n          modelClass +\n          ' mdl-textfield mdl-js-textfield mdl-textfield--floating-label'\n        }\n        key={modelId}>\n        <input\n          className=\"mdl-textfield__input\"\n          type=\"text\"\n          pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n          id={modelId}\n          onChange={this.handleInput}\n          value={this.state.text}\n        />\n        <label className=\"mdl-textfield__label\" htmlFor={modelId}>\n          {modelTitle}\n        </label>\n        <span className=\"mdl-textfield__error\">数値が正しくありません</span>\n      </div>\n    )\n  }\n}\n\nInputBoxValue.propTypes = {\n  modelClass: PropTypes.string,\n  modelTitle: PropTypes.string,\n  modelId: PropTypes.string,\n  modelValue: PropTypes.number,\n  propFunc: PropTypes.func\n}\n\nInputBoxValue.defaultProps = {\n  modelClass: 'InputBoxValue',\n  modelTitle: 'InputBoxValue',\n  modelId: 'InputBoxValue',\n  modelValue: 0\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { inputChange } from '../actions'\nimport InputBoxValue from '../components/InputBoxValue'\n\nclass MenuChar extends Component {\n  render() {\n    const { level, AtkParm, com, struAtk } = this.props\n    const { inputChange } = this.props\n\n    return (\n      <div>\n        <InputBoxValue\n          modelKey={'button level'}\n          modelClass={'text-input'}\n          modelTitle={'城娘等級'}\n          modelId={'level'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={level}\n        />\n        <InputBoxValue\n          modelKey={'button AtkParm'}\n          modelClass={'text-input'}\n          modelTitle={'攻擊成長係數(%)'}\n          modelId={'AtkParm'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={AtkParm}\n        />\n        <InputBoxValue\n          modelKey={'button com'}\n          modelClass={'text-input'}\n          modelTitle={'絆'}\n          modelId={'com'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={com}\n        />\n        <InputBoxValue\n          modelKey={'button struAtk'}\n          modelClass={'text-input'}\n          modelTitle={'設施攻擊'}\n          modelId={'struAtk'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={struAtk}\n        />\n      </div>\n    )\n  }\n}\n\nMenuChar.propTypes = {\n  level: PropTypes.number.isRequired,\n  AtkParm: PropTypes.number.isRequired,\n  com: PropTypes.number.isRequired,\n  struAtk: PropTypes.number.isRequired,\n  inputChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    level: state.reducerCalc.level,\n    AtkParm: state.reducerCalc.AtkParm,\n    com: state.reducerCalc.com,\n    struAtk: state.reducerCalc.struAtk\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChange: bindActionCreators(inputChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuChar)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { maxChange } from '../actions'\nimport ToggleButton from '../components/ToggleButton'\nimport { listBut, listButS } from '../constants/ConstList'\n\nclass MenuMax extends Component {\n  render() {\n    const { max, maxChange } = this.props\n    const maxTemp = (\n      <label key={'inputBut_label'} htmlFor=\"maxType\">\n        巨大化：\n      </label>\n    )\n    return listBut.reduce(\n      (output, data, i) => {\n        output.push(\n          <ToggleButton\n            key={'inputBut' + i.toString()}\n            modelKey={'inputBut' + i.toString()}\n            modelSwitch={max}\n            modelTitle={data}\n            propFunc={modelId => {\n              maxChange(modelId)\n            }}\n            modelId={listButS[i]}\n            modelClassActive={\n              'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n            }\n            modelClassInactive={\n              'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n            }\n          />\n        )\n        return output\n      },\n      [maxTemp]\n    )\n  }\n}\n\nMenuMax.propTypes = {\n  max: PropTypes.string.isRequired,\n  maxChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    max: state.reducerCalc.max\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    maxChange: bindActionCreators(maxChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuMax)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { inputChange } from '../actions'\nimport InputBoxValue from '../components/InputBoxValue'\n\nclass MenuOptionsA extends Component {\n  render() {\n    const { atk, def, skillSpdUpF, skillSpdUpB, inputChange } = this.props\n\n    return (\n      <div>\n        <InputBoxValue\n          modelKey={'button atk'}\n          modelClass={'text-input'}\n          modelTitle={'城娘素身攻擊力'}\n          modelId={'atk'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={atk}\n        />\n        <InputBoxValue\n          modelKey={'button def'}\n          modelClass={'text-input'}\n          modelTitle={'兜防禦力'}\n          modelId={'def'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={def}\n        />\n        <InputBoxValue\n          modelKey={'button skillSpdUpF'}\n          modelClass={'text-input'}\n          modelTitle={'攻撃速度上昇(%)'}\n          modelId={'skillSpdUpF'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillSpdUpF}\n        />\n        <InputBoxValue\n          modelKey={'button skillSpdUpB'}\n          modelClass={'text-input'}\n          modelTitle={'攻撃後の隙短縮(%)'}\n          modelId={'skillSpdUpB'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillSpdUpB}\n        />\n      </div>\n    )\n  }\n}\n\nMenuOptionsA.propTypes = {\n  atk: PropTypes.number.isRequired,\n  def: PropTypes.number.isRequired,\n  skillSpdUpF: PropTypes.number.isRequired,\n  skillSpdUpB: PropTypes.number.isRequired,\n  inputChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    atk: state.reducerCalc.atk,\n    def: state.reducerCalc.def,\n    skillSpdUpF: state.reducerCalc.skillSpdUpF,\n    skillSpdUpB: state.reducerCalc.skillSpdUpB\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChange: bindActionCreators(inputChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuOptionsA)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { inputChange } from '../actions'\nimport InputBoxValue from '../components/InputBoxValue'\n\nclass MenuOptionsB extends Component {\n  render() {\n    const {\n      skillAtkUp,\n      skillDefDown,\n      inputChange,\n      skillAtkUpInt,\n      skillDefDownInt\n    } = this.props\n\n    return (\n      <div>\n        <InputBoxValue\n          modelKey={'button skillAtkUp'}\n          modelClass={'text-input'}\n          modelTitle={'攻擊力增加(%)'}\n          modelId={'skillAtkUp'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillAtkUp}\n        />\n        <InputBoxValue\n          modelKey={'button skillAtkUpInt'}\n          modelClass={'text-input'}\n          modelTitle={'攻擊力增加'}\n          modelId={'skillAtkUpInt'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillAtkUpInt}\n        />\n        <InputBoxValue\n          modelKey={'button skillDefDown'}\n          modelClass={'text-input'}\n          modelTitle={'兜防禦力減少(%)'}\n          modelId={'skillDefDown'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillDefDown}\n        />\n        <InputBoxValue\n          modelKey={'button skillDefDownInt'}\n          modelClass={'text-input'}\n          modelTitle={'兜防禦力減少'}\n          modelId={'skillDefDownInt'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillDefDownInt}\n        />\n      </div>\n    )\n  }\n}\n\nMenuOptionsB.propTypes = {\n  skillAtkUp: PropTypes.number.isRequired,\n  skillDefDown: PropTypes.number.isRequired,\n  skillAtkUpInt: PropTypes.number.isRequired,\n  skillDefDownInt: PropTypes.number.isRequired,\n  inputChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    skillAtkUp: state.reducerCalc.skillAtkUp,\n    skillDefDown: state.reducerCalc.skillDefDown,\n    skillAtkUpInt: state.reducerCalc.skillAtkUpInt,\n    skillDefDownInt: state.reducerCalc.skillDefDownInt\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChange: bindActionCreators(inputChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuOptionsB)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { inputChange } from '../actions'\nimport InputBoxValue from '../components/InputBoxValue'\n\nclass MenuOptionsB extends Component {\n  renderCannonDirectHit = () => {\n    const { type, skillCanDirUp, inputChange } = this.props\n    if (type === 'cannon') {\n      return (\n        <InputBoxValue\n          modelKey={'button cannon'}\n          modelClass={'text-input'}\n          modelTitle={'砲撃直撃時の攻撃ボーナス上昇(%)'}\n          modelId={'skillCanDirUp'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillCanDirUp}\n        />\n      )\n    }\n    return null\n  }\n\n  render() {\n    const { inputChange, skillDamUp, skillRecDamUp, skillMelIgdef } = this.props\n\n    return (\n      <div>\n        <InputBoxValue\n          modelKey={'button skillDamUp'}\n          modelClass={'text-input'}\n          modelTitle={'与えるダメージが上昇(%)'}\n          modelId={'skillDamUp'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillDamUp}\n        />\n        <InputBoxValue\n          modelKey={'button skillRecDamUp'}\n          modelClass={'text-input'}\n          modelTitle={'兜の被ダメージが上昇(%)'}\n          modelId={'skillRecDamUp'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillRecDamUp}\n        />\n        <InputBoxValue\n          modelKey={'button cannon'}\n          modelClass={'text-input'}\n          modelTitle={'敵の防御を無視する(%)'}\n          modelId={'skillMelIgdef'}\n          propFunc={(modelId, modelValue) => {\n            inputChange(modelId, modelValue)\n          }}\n          modelValue={skillMelIgdef}\n        />\n        {this.renderCannonDirectHit()}\n      </div>\n    )\n  }\n}\n\nMenuOptionsB.propTypes = {\n  type: PropTypes.string.isRequired,\n  skillDamUp: PropTypes.number.isRequired,\n  skillRecDamUp: PropTypes.number.isRequired,\n  skillCanDirUp: PropTypes.number.isRequired,\n  skillMelIgdef: PropTypes.number.isRequired,\n  inputChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    type: state.reducerCalc.type,\n    skillDamUp: state.reducerCalc.skillDamUp,\n    skillRecDamUp: state.reducerCalc.skillRecDamUp,\n    skillCanDirUp: state.reducerCalc.skillCanDirUp,\n    skillMelIgdef: state.reducerCalc.skillMelIgdef\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputChange: bindActionCreators(inputChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MenuOptionsB)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { refChange, refSinChange } from '../actions'\nimport MdlTableClass from '../components/MdlTableClass'\nimport ToggleButton from '../components/ToggleButton'\nimport { tableHead, tableInd, listRef, listRefS } from '../constants/ConstList'\nimport './OutputTable.css'\n\nclass OutputTable extends Component {\n  renderButton = () => {\n    const { refChange } = this.props\n    return listRef.reduce((output, data, i) => {\n      output.push(\n        <ToggleButton\n          key={'inputRef' + i.toString()}\n          modelKey={'inputRef' + i.toString()}\n          modelSwitch={listRefS[i]}\n          modelTitle={data}\n          propFunc={modelId => {\n            refChange(modelId)\n          }}\n          modelId={listRefS[i]}\n          modelClassActive={\n            'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n          }\n          modelClassInactive={\n            'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n          }\n        />\n      )\n      return output\n    }, [])\n  }\n\n  render() {\n    const { output, refSinChange } = this.props\n\n    return (\n      <div>\n        <div className=\"refine-button\">\n          精煉設定：\n          {this.renderButton()}\n        </div>\n        <div>\n          <MdlTableClass\n            tableId={'outputTable'}\n            tableInd={tableInd}\n            tableHead={tableHead}\n            tableData={output}\n            tableClass={\n              'outputTable mdl-data-table mdl-js-data-table mdl-shadow--2dp'\n            }\n            tableFunction={modelId => {\n              refSinChange(modelId)\n            }}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nOutputTable.propTypes = {\n  output: PropTypes.array.isRequired,\n  refChange: PropTypes.func.isRequired,\n  refSinChange: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    output: state.reducerCalc.output\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refChange: bindActionCreators(refChange, dispatch),\n    refSinChange: bindActionCreators(refSinChange, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OutputTable)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { modelOpen } from '../actions'\nimport MenuType from './MenuType'\nimport MenuToggle from './MenuToggle'\nimport MenuChar from './MenuChar'\nimport MenuMax from './MenuMax'\nimport MenuOptionsA from './MenuOptionsA'\nimport MenuOptionsB from './MenuOptionsB'\nimport MenuOptionsC from './MenuOptionsC'\nimport OutputTable from './OutputTable'\nimport ToggleButton from '../components/ToggleButton'\nimport './Content.css'\n\nclass Content extends Component {\n  render() {\n    const { modelOpen } = this.props\n    return (\n      <main className=\"demo-main mdl-layout__content\">\n        <div className=\"demo-container mdl-grid\">\n          <div className=\"mdl-cell mdl-cell--2-col mdl-cell--hide-tablet mdl-cell--hide-phone\" />\n          <div className=\"content demo-content mdl-color--white mdl-shadow--4dp mdl-color-text--grey-800 mdl-cell mdl-cell--8-col\">\n            <div>\n              <MenuType />\n            </div>\n            <div>\n              <ToggleButton\n                modelKey={'button char'}\n                modelSwitch={'1'}\n                modelTitle={'城娘選擇'}\n                propFunc={modelId => {\n                  modelOpen(modelId)\n                }}\n                modelId={'1'}\n                modelClassActive={\n                  'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--primary'\n                }\n                modelClassInactive={\n                  'mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--accent'\n                }\n              />\n            </div>\n            <MenuChar />\n            <div>\n              <MenuToggle />\n            </div>\n            <div>\n              <MenuMax />\n            </div>\n            <MenuOptionsA />\n            <MenuOptionsB />\n            <MenuOptionsC />\n            <OutputTable />\n          </div>\n        </div>\n      </main>\n    )\n  }\n}\n\nContent.propTypes = {\n  modelOpen: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    modelOpen: bindActionCreators(modelOpen, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Content)\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"demo-footer mdl-mini-footer\">\n        <div className=\"mdl-mini-footer--left-section\">\n          <div>\n            <small>\n              {' '}\n              『<a href=\"http://www.dmm.com/netgame_s/oshirore/\">城プロRE</a>\n              』(C) DMMゲームズ\n            </small>\n          </div>\n          <div>\n            <small>\n              「城プロRE」から転載された全てのコンテンツの著作権につきましては、権利者様へ帰属します。\n            </small>\n          </div>\n          <div>\n            <small>\n              {' '}\n              Copyright &copy; Panepo@Github 2016 All Rights Reserved.\n            </small>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport Drawer from './Drawer'\nimport Content from './Content'\nimport Footer from './Footer'\nimport './App.css'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"demo-layout mdl-layout mdl-js-layout mdl-color--grey-100\">\n          <Header />\n          <Drawer />\n          <div className=\"demo-ribbon\" />\n          <Content />\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import '@babel/polyfill'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport App from './containers/App'\nimport registerServiceWorker from './registerServiceWorker'\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(reducer, applyMiddleware(...middleware))\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('pilebunker')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}